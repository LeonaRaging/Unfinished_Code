#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
#define pb push_back
#define db(val) "[" #val " = " << (val) << "] "
#define mp make_pair
using namespace std;
const int maxn = 1e5 + 4;
const ll INF = 1e16;

int n, par[maxn];
ll res, h[maxn], diam[maxn];
pair<ll,int> maxlen[maxn][3];
vector<pair<int,int>> adj[maxn];

void dfs(int u, int p) {
    for (auto it : adj[u]) {
        int v; ll w; tie(v, w) = it;
        if (v == p) continue;
        par[v] = u;
        h[v] = h[u] + w;
        dfs(v, u);
        if (maxlen[u][2].fi < maxlen[v][0].fi + w)
            maxlen[u][2] = {maxlen[v][0].fi + w, v};
        if (maxlen[u][2].fi > maxlen[u][1].fi)
            swap(maxlen[u][2], maxlen[u][1]);
        if (maxlen[u][1].fi > maxlen[u][0].fi)
            swap(maxlen[u][0], maxlen[u][1]);
        diam[u] = max(diam[u], diam[v]);
    }
    diam[u] = max(diam[u], maxlen[u][0].fi + maxlen[u][1].fi);
}

void DFS(int u) {
    pair<ll,int> mx1 = {0, 0}, mx2 = {0, 0};
    for (auto it : adj[u]) {
        int v; ll w; tie(v, w) = it;
        if (v == par[u]) continue;
        DFS(v);
        if (diam[v] > mx2.fi) mx2 = {diam[v] , v};
        if (mx2.fi > mx1.fi) swap(mx1, mx2);
    }
    for (auto it : adj[u]) {
        int v; ll w; tie(v, w) = it;
        if (v == par[u]) continue;
        ll d = (mx1.se == v ? mx2.fi : mx1.fi);
        if (v == maxlen[u][0].se) d = max(d, maxlen[u][1].fi + maxlen[u][2].fi);
        else if (v == maxlen[u][1].se) d = max(d, maxlen[u][0].fi + maxlen[u][2].fi);
        else d = max(d, maxlen[u][0].fi + maxlen[u][1].fi);
        for (int t = 0; t < 3; t++) if (maxlen[u][t].se != v)
            d = max(d, maxlen[u][t].fi + h[u]);
        res = min(res, abs(d - diam[v]));
    }
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    while (cin >> n) {
        if (n == 0) return 0;
        for (int i = 1; i <= n; i++) {
            adj[i].clear();
            diam[i] = h[i] = par[i] = 0;
            for (int j = 0; j < 3; j++)
                maxlen[i][j] = {0, 0};
        }
        res = INF;
        for (int u = 2; u <= n; u++) {
            int v, w; cin >> v >> w;
            adj[u].pb({v, w});
            adj[v].pb({u, w});
        }
        dfs(1, 0);
        DFS(1);
        cout << res << '\n';
    }
}
